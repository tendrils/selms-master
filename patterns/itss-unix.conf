[global] {
  maildomain = auckland.ac.nz
  hostdomain = auckland.ac.nz
  mail_server = mailhost.auckland.ac.nz
  log_dir = /logs/HOSTS
  offset = selms

  include +UNIX.conf

}

# this section tries to cover all the legit ssh, su and sudo activity

$ITSS_UNIX_ADMIN = (?:steves|alchow|ianf|cwar037|yongbao|ctay080|amcl065|zzha028|blom001)
$ITSS_DBA = (?:ianf|diva003|nlat007|amcl065|srav002|pjan005|asha210)
$PS_ADMIN = (?:avei002|asha210|zzha028|klim021|yzha023)
$PS_ACC = ps(?:hr|fs|sa|ep|admin)(?:prd|tst|dev)?
$ID = (?:\[ID [^\]]+\]\s*)

[service itssunixadmin] {
  [realtime] {
    proc sudo	: warn      
  }
  [periodic] {
    proc sudo & re /^$ID?$ITSS_UNIX_ADMIN/					: drop
    proc sudo & re %r!^$ID?$PS_ADMIN .* COMMAND=(?:/usr)?/bin/su - $PS_ACC!		: drop
    proc sudo & re %r!^$ID?$ITSS_DBA .* COMMAND=(?:/usr)?/bin/su - (?:oracle|vdxt)!	: drop
    proc sudo & re %r!nobody .+ COMMAND=/bin/cat /proc/megaide/0/status!	: drop
    proc su & re /'su $PS_ACC' succeeded for $PS_ADMIN/				: drop
    proc su & re /'su (?:oracle|hyperion)' succeeded for $ITSS_DBA/		: drop
    proc su & re /'su root' succeeded for $ITSS_UNIX_ADMIN/			: drop
    proc su & re /'su \w+' succeeded for root/					: drop
    proc su & re /^$ID?'su $PS_ACC' succeeded for $PS_ADMIN/			: drop
    proc su & re /^$ID?'su weblogic' succeeded for $PS_ADMIN/			: drop
    proc login & rec %r!^$ID?ROOT LOGIN /dev/pts/\d+!				: drop
    proc sshd & re /^$ID?Accepted keyboard-interactive for $PS_ADMIN from 130\.216\.248\./	: drop
    proc sshd & re /^$ID?Accepted publickey for $ITSS_UNIX_ADMIN from 130\.216\./	: drop

    proc sshd & re /^$ID?Accepted publickey for $ITSS_UNIX_ADMIN from 130\.216\./	: drop
    proc sshd & re /^$ID?Accepted password for $ITSS_UNIX_ADMIN/		: drop
    proc sshd & re /^$ID?Accepted publickey for oracle from 192\.168\.163\.(5|8)/	: drop
    proc sshd & re /^$ID?Accepted publickey for $PS_ADMIN from 192\.168\.163\.(5|8|11)/	: drop
    proc sshd & /^$ID?Accepted publickey for $PS_ACC from 130\.216\.248\.10/	: drop
    proc sshd & %r!^$ID?'su root' succeeded for root on /dev/\?\?\?!		: drop
  }
}


$LBR_ACC = (?:dspace|postgress|root|exproxy)
$LBR_ADMIN = (?:ffos001|nmus006|pjan005|ylat003)

[service lbradmin] {
  [periodic] {
    proc sudo & re %r!^$ID?$LBR_ADMIN .* COMMAND=(?:/usr)?/bin/su - voyager!		: drop
    proc su & re /'su $LBR_ACC' succeeded for $LBR_ADMIN/	: drop
  }
}


[service tsm: proc] {
  [periodic] {
     /^NULL: 3004-015 TSM was unable to open port "NULL"/	:drop
     %r!/dev/tty0: 3004-015 TSM was unable to open port "/dev/tty0"!	: drop
  }
}

[service psauth : proc ] {
  [periodic] {
    /^$ID?\**EXT exit took \d seconds/				: drop
    /^$ID?checkUniSign \([^)]+\) returned 0->OK/		: drop
    /^$ID?checkUniSign returned 0->OK/				: drop
    /^$ID?checkUniSign \S+ returned 5->/	: count 5 "checkUniSign returned 5", drop
    /^$ID?Doesn't look like i have a cookie for operator/	: drop
  }
}

[service cediag : proc ] {
  [periodic] {
     re /^$ID?Revision:/	: drop
     re /^$ID?Analysed System:/	: drop
     re /^$ID?Pages Retired: 0/	: drop
     Re /^$ID?findings: 0/	: drop
  }
}

[service cosign.cgi : proc ] {
  [periodic] {
  }

}

[service cosign : proc=>cosignd ] {
  [periodic] {
    re /f_register: Failed to locate TGT/				: drop
    re /^close_sn: snet_writef failed/					: drop
    re /snet_getline: Connection reset by peer/				: drop
    re /^close_sn: snet_getline_multi failed/				: drop
    re /SSL routines:SSL3_GET_CLIENT_CERTIFICATE:no certificate return/	: drop
    re /Transport endpoint is not connected/				:drop
    re /^Pusher Child .+: Failed snet_get_multi.+Success/		:drop
    re /^Pusher Child .+: Failed to get tgt for id/	: \
              count 10 "puher child Failed to get tgt", drop
    re /^Pusher Child .+: Failed to handle the replication event/	: \
              count 500 "pusher failed to handle the replication event", drop
    re /^Pusher Child .+: Failed snet_get_multi after sending .+ reset by peer/	: \
              count 10 "pusher failed to handle the replication event", drop
    re /^Pusher Child .+: Failed to close connection while .+: Broken pipe/	: \
              count 10 "pusher failed to close connection", drop
    re /^Pusher Child .+: connect_sn transient failure/	:\
              count 10 "pusher transient failure", drop
    re /^Pusher Child .+: Failed to close connection while return from failure: close_sn: Success/	: drop
    re /f_register: addSTDetailsToCahce failed/	:\
              count 10 "f_register: addSTDetailsToCahce failed", drop
    re /^connect: Connection refused/	: count 10 "connect: Connection refused", drop
#    re /\(command\.c\.1463\)/						: drop
    proc cosign.cgi & /^cgi\.c\..+cosign_register failed/	:count 10 "cgi errors -cosign_register failed", drop
    proc cosign.cgi & /^network\.c\..+net_login: Connection reset by peer/	:count 10 "cgi.c net_login: Connection reset by peer", drop
  }
}

[service nagios] {
  [periodic] {
    proc inetd & re /nrpe\[\d+\] from 130\.216\.5\.10[124]/			: drop
    proc xinetd & re /nrpe pid=\d+ from=130\.216\.5\.10[124]/			: drop
    re /daemon\.notice.*nrpe.*from 130\.216\.5\.10[124]/			: drop
    re /COMMAND=.*nrpe.check_db/						: drop
    re /COMMAND=.*nrpe.check_raid/						: drop
    proc sshd & re /^Connection closed by 130.216.5.10[124]/			: drop
    proc sshd & re /^Connection from 130.216.5.10[124]/				: drop
    proc su & re %r!^\[ID \d+ auth.info\] 'su oracle' succeeded for root on /dev/???!			: drop
    proc sudo & re %r!^\s*nobody : TTY=unknown ; PWD=/\S* ; USER=root ; COMMAND=/usr/local/(s?bin|nrpe)/!	: drop
    proc sudo & re %r!^\s*nobody : TTY=unknown ; PWD=/\S* ; USER=root ; COMMAND=/usr(?:/local)?/s?bin/mpt-status!	:drop
  }
}

[service ipmon : proc] {
  [periodic] {
    RE /local0\.notice/		: Drop
  }
}

[service quar] {
  [periodic] {
    proc ssh & RE /Accepted publickey for root from 130.216.190.1[1-4]/	: Drop
  }
}


[service mailserver] {
  [periodic] {
    RE /last message repeated/	:drop
    proc xinetd & RE /START: nrpe/	:drop
    proc dccifd & RE /^continue not asking DCC \d+ seconds after failure/	: drop
    proc dccifd & RE /^write\(MTA socket,\d+\): Broken pipe/			: drop
    proc dccifd & RE /^missing message body/					: drop
    proc dccifd & RE /^continue not asking DCC \d+ seconds after failure/	: drop
    proc dccifd & RE /^no answer from (\S+)/					: drop
    proc sudo & %r!^(nobody|root) : TTY=\S+ ; PWD=\S* ; USER=postfix ; COMMAND=/usr/local/sbin/mailq2!		: drop
    proc sudo & %r!^(steves|bojanz) : TTY=pts/1 ; PWD=/home/\S+ ; USER=root !	:drop
    proc amavis & /TROUBLE in check_mail: spam_scan FAILED/		: count 10 'amavisd trouble', drop
    proc dccproc & re /^continue not asking DCC \d+ seconds after failure/	: drop
    proc smtpd & re /^fatal: watchdog timeout/	: count 10 'postfix watchdog timeout', drop
    re %r!^running: /usr/bin/scp!	: drop
    proc sshd & /^Accepted publickey .+130\.216\.(10\.32|191\.13|10\.123|190.23)/	: drop
    proc sshd & /^Address 130.216.10.32 maps to data1-new.ec.auckland.ac.nz/		: drop
    proc sshd & /^Accepted publickey for netacct from ::ffff:130.216.3.31/	:drop
    proc amavis & /\(!!\)run_av \(KasperskyLab AVP - aveclient\) FAILED -.+"ERROR: Could not connect to server!"/	: count 5 "Kaspersky failed to connect to server", drop
    proc amavis & /\(!!\)KasperskyLab AVP - aveclient av-scanner FAILED: .+"ERROR: Could not connect to server!"/	: drop

  }
}

[service san : proc=>vpathdd ] {
  [periodic] {
     re /^$ID?NOTICE: VPATH_EVENT: device = vpath/	: drop
  }
}


[service mailpamkrb] {
  [periodic] {
    re /pam_krb5: setting initial timeout to \d+/	: drop
    re /pam_krb5: making tickets proxiable/		: drop
    re /pam_krb5: required_tgs set/			: drop
    re /pam_krb5: setting timeout shift/		: drop
    re /pam_krb5: use_authtok false/			: drop
    re /pam_krb5: user_check true/			: drop
    re /pam_krb5: validate false/			: drop
    re /pam_krb5: warn true/				: drop
    re /pam_krb5: warn_period \d+/			: drop
    re /pam_krb5: pam_sm_setcred returning/		: drop
    re /pam_krb5: \S+ called$/				: drop
    re /pam_krb5: Creating a ticket with addresses/	: drop
    re /pam_krb5: krb4_convert true/			: drop
    re /pam_krb5: password-changing banner set to /	: drop
    re /pam_krb5: ccache directory set to /		: drop
    re /pam_krb5: making tickets forwardable/		: drop
    re /pam_krb5: keytab file name set to /		: drop
    re /pam_krb5: setting maximum timeout to \d+/	: drop
    re /pam_krb5: will only attempt to authenticate users when UID >= 0/	: drop
    re /pam_krb5: setting renewable lifetime to \d+/	: drop
    re /pam_krb5: required_tgs set to /			: drop
    re /pam_krb5: Kerberos 5 credential retrieval failed for .+, user is probably local/	: drop
    re /pam_krb5: setting ticket lifetime to /		: drop
  }
}




[service redhat] {
  [periodic] {
    proc rhnsd & re %r!running program /usr/sbin/rhn_check!	: drop
  }
}


[service socks5 : proc]{
  [periodic] {
    RE /daemon.notice/	: Drop
    proc socks5 & /^$ID?Proxy: Unable to determine version number:/	: drop
    proc socks5 & /^$ID?Flow Recv: client closed connection/		: drop
    proc socks5 & /^$ID?Flow Recv: Select failed: Inactivity timeout/	: drop
    proc socks5 & /^$ID?Flow Recv: client Read failed: Connection reset by peer/	: drop
    proc socks5 & /^$ID?Flow Recv: server Read failed: Connection reset by peer/	: drop
  }
}

[service itsslinux  ] {
  service linux
  service sendmail
  service nagios
  service ipmon
  service cosign
  service cediag
  service sshd
  service itssunixadmin
  service san

  [periodic] {
    proc kernel & /^Linux version/		: alert,  switch 'reboot'
  }	

  [periodic reboot] {
    proc ntpd 			:  switch 'default'
    proc kernel			:  ignore
    proc vmkernel		:  ignore
    proc rc.sysinit		: ignore
    proc vmware			: ignore
    proc vmkload_mod		: ignore
    proc snmpd			: ignore
  }	
}


[service itsssolaris : file => all ( solaris ) ] {
  service unix 
  service sendmail
  service nagios
  service ipmon
  service cosign
  service srs
  service cediag
  service sshd
  service itssunixadmin
  service san
  service stunnel
}


[service itss_unix] {
  service unix
  service nagios
  service srs
  service cediag
  service sshd
}

[service saslauthd : proc ] {
  [periodic] {
    re /^pam_krb5: authenticate error: Client not found in Kerberos database/	: drop
    re /^pam_krb5: .+: Decrypt integrity check failed/	: count 10 'pam-krb5: Decrypt integrity check failed', drop
    re /^do_request \s+: NULL password received/	: count 10 'sasl NULL password received', drop
    re /^PAM-listfile: Refused user (\S+) for service (\w+)/	: count 10 "PAM-listfile: Refused user %1 for service %2", drop
    re /^pam_ldap: error trying to bind as user "uid\s*=\s*(\w+),.+Invalid credentials/	: count 10 "sasl possible brute force of user %1", drop
  }
}

############################## hosts ###################################

[ host net : email=>dns-apps-logs ] {
  service unix
  service bind9
}


[host hotlava.itss : email=>itss-unix-admin] {
  service unix
  [periodic] {
    re /master/		: drop
    re /ctl_cyrusdb/	: drop
  }
}


[host postbox : /^postbox.*/	; email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service saslauthd
  service itssunixadmin
  [periodic] {
    proc imaps & /^idle for too long/					: drop
    proc imap & /^idle for too long/					: drop
    proc imaps & re /Fatal error: tls_start_servertls\(\) failed/	: drop
    proc pop3s & re /Fatal error: tls_start_servertls\(\) failed/	: drop
    proc imap & /^Connection reset by peer, closing connection/		: drop
    proc imaps & /^Connection reset by peer, closing connection/		: drop
    proc sudo & re %r!^nobody .+ COMMAND=/usr/local/bin/mpt-status!	: drop
    proc sudo & re %r!^\s*ianf .+ COMMAND=/bin/bash!			: drop
    proc pop3s & re /^Unable to lock maildrop for (\w+):/		: count 3 "failed to lock mail box for %1", drop
    proc pop3 & re /^Unable to lock maildrop for (\w+):/		: count 3 "failed to lock mail box for %1", drop
  }
}

#Unable to lock maildrop for mdur001: Mailbox is locked by POP server

[host tsm1 : email=>itss-unix-admin] {
  service unix 
  service sendmail	
}

[host lynx-backup : email=>itss-unix-admin] {
  service itss_unix
  service srs
  service itssunixadmin
  [periodic] {
#    re /svr\[.*\] from/	: drop
     proc nscd & re /^$ID?gethostbyaddr:/	: drop 
     proc sudo & re %r!^$ID?ledw003 .+ COMMAND=/usr/local/sbin/invoices.pl!	: drop
  }
}

[host info.lbr : email=>itss-unix-admin] {
  service itss_unix
  service socks5
  service squid
  service itssunixadmin
  [periodic] {
    proc plug-gw 							: drop
    proc su & re /'su vdxt?' succeeded for $ITSS_UNIX_ADMIN/		: drop
    proc explorer & re /^$ID?Explorer (started|finished)/		: drop
  }
}

[host chico.itss : email=>b.zdrnja, itss-unix-admin] {
  service linux
  service sshd
  service itssunixadmin
  service mailserver
  service nagios
  service mailpamkrb
  service saslauthd
}

[host groucho.itss : email=>b.zdrnja, itss-unix-admin] {
  service sshd
  service itssunixadmin
  service mailserver
  service nagios
  service mailpamkrb
  service saslauthd
}

[host harpo.itss : email=>b.zdrnja, itss-unix-admin] {
  service sshd
  service itssunixadmin
  service mailserver
  service nagios
  service mailpamkrb
  service saslauthd
}

[host zeppo.itss : email=>b.zdrnja, itss-unix-admin] {
  service sshd
  service itssunixadmin
  service mailserver
  service nagios
  service mailpamkrb
  service saslauthd
}

[host motoko.itss : email=>itss-unix-admin] {
  service unix
  service sendmail
  service nagios
  service quar
}

[host list : email=>itss-unix-admin] {
  service linux
  service sendmail
  service nagios
}

[host kanako.itss :  /kanako.+\.itss/	; email=>itss-unix-admin] {
  service linux
  service sshd
  service smbd
  service nmbd
  service nagios
  service proftpd
  service itssunixadmin
}

[host adara.psoft : email=>itss-unix-admin] {
  service unix
  service sendmail
  service nagios
  service ipmon
  service cosign
  service linux
  service sshd
  service itssunixadmin
  [periodic] {
    proc sshd & re /^Accepted publickey for psepprd from 192.168.163.12/	:drop
  }
}

[host acrux.psoft : email=>itss-unix-admin] {
  service unix
  service sendmail
  service nagios
  service ipmon
  service cosign
  service linux
  service sshd
  service itssunixadmin
  [periodic] {
    proc sshd & re /^Accepted publickey for psepprd from 192.168.163.12/	:drop
  }
}

[host albali.psoft : email=>itss-unix-admin] {
  service itsssolaris
  service unix
  service sendmail
  service nagios
  service ipmon
  service cosign
  service linux
  service sshd
  service itssunixadmin
  [periodic] {
    proc sshd & re /^Accepted publickey for psepprd from 192.168.163.12/	:drop
  }
}

[host acamar.psoft : email=>itss-unix-admin] {
  service itsssolaris
}

 [host unisign-test-temp : email=>itss-unix-admin] {
  service itsssolaris
}

 [host agena.psoft : email=>itss-unix-admin] {
  service itsssolaris
}

 [host forz : re /forz.*/	; email=>itss-unix-admin] {
  service itsssolaris
  [periodic] {
     proc su & re /'su root' succeeded for $ITSS_UNIX_ADMIN/	: drop
  }
}


[host heze.psoft : email=>itss-unix-admin] {
  service itsssolaris
}

[host aries-psoft.psoft : email=>itss-unix-admin] {
  service itsssolaris
}

[host orion.itss : email=>itss-unix-admin] {
  service itsssolaris
}

[host lyra : email=>itss-unix-admin] {
  service itsssolaris
  service lbradmin
}

[host altair.itss : email=>itss-unix-admin] {
  service itsssolaris
}

[host draco : email=>itss-unix-admin] {
  service itsssolaris
  service psauth
}


[host spica : email=>itss-unix-admin] {
  service itsssolaris
}

[host regor : email=>itss-unix-admin] {
  service itsssolaris
  service psauth
}

[host vega : email=>itss-unix-admin] {
  service itsssolaris
  [periodic] {
    re /Kerberos mechanism library initialization error: No profile file open/	: drop
  }
}

[host gemini-a : email=>itss-unix-admin] {
  service itsssolaris
}

[host leo : email=>itss-unix-admin] {
  service itsssolaris
  service srs
  [periodic] {
    proc stunnel & /ldaps connected from 127.0.0.1/	: drop
    proc stunnel & /Connection closed:/	: drop
  }

}

[host virgo : email=>itss-unix-admin] {
  service unix 
  service sendmail
  service nagios
  service sshd
  service itssunixadmin
}

[host cerberus : re/cerberus\d.*.itss/	; email=>itss-unix-admin] {
  service itsslinux
  [periodic] {
     proc cosignd & /^Pusher Parent: Failed to push the event /	 : count 10 "pusher event failed", drop
  }
}

[host kitsune.itss : email=>itss-unix-admin] {
   service itsssolaris
}

[host alcor.itss : email=>itss-unix-admin] {
   service itsssolaris
}

[host pavo.itss : email=>itss-unix-admin] {
   service itsssolaris
}
 
[host osiris : re /osiris\d/	; email=>itss-unix-admin] {
   service itsslinux
  [ periodic ] {
    proc cosign.cgi & /A user with session name \w+ attempted to be remembered as/	: alert security
  }
}
 

[host indus  : email=>itss-unix-admin] {
  service unix
  service srs
  service cediag
  service sshd
  service psauth
  service itssunixadmin
}

[host evals.itss  : email=>itss-unix-admin] {
  service unix
  service srs
  service sshd
  service cediag
  service itssunixadmin
}

[host lacerta-a.fin  : email=>itss-unix-admin] {
  service unix
  service srs
  service sshd
  service itssunixadmin
}

[host alfirk.fin  : email=>itss-unix-admin] {
  service unix
  service srs
  service sshd
  service itssunixadmin
}

[host mizar  : email=>itss-unix-admin] {
  service unix
  service srs
  service sshd
  service cediag
  service itssunixadmin
}


[host sf4800sc : re /sf4800sc\d.itss/	; email=>itss-unix-admin]  {
  service unix
  [periodic] {
     proc platform.sc & re /^$ID?Spare, up/		: drop
     proc platform.sc & re /^$ID?Main, up/		: drop
  }
}

[host ecedir.ec :re /ecedir-.+ec/	; email=>itss-unix-admin]  {
  service unix
  service sshd
}

[host eceafs.ec :re /eceafs-.+ec/	; email=>itss-unix-admin]  {
  service unix
  service nagios
  service stunnel
}


[host subversion : email=>itss-unix-admin]  {
  service unix
  service itssunixadmin
  [periodic] {
    proc sshd &  %r!^(blom001) : TTY=pts/\d ; PWD=\S+ ; USER=root ; COMMAND=!	: drop
  }
}
[Host www2 : re /^www2/	; email=>itss-unix-admin]  {
  service unix
  service sshd
  service proftpd
  [periodic] {
     proc proftpd & re /^www2.+- USER \w+: Login successful/		: drop
  }
}

[host tucana-a.fin : email=>itss-unix-admin]  {
  service unix
  service itssunixadmin
}

[host alphard.fin : email=>itss-unix-admin]  {
  service unix
  service sshd
  service itssunixadmin
  [periodic] {
     proc insmod & %r!^/lib/modules/.+floppy.o:!	:drop
  }
}

[host algol.fin : email=>itss-unix-admin]  {
  service unix
  service sshd
  service itssunixadmin
}

[host alkes.fin : email=>itss-unix-admin]  {
  service unix
  service sshd
  service itssunixadmin
}

[host rimsprod.itss : email=>itss-unix-admin]  {
  service unix
  service sshd
  service itssunixadmin
}

[host keitaro : email=>itss-unix-admin]  {
  service unix
  service sshd
  service itssunixadmin
  [periodic] {  # machine not under our control ...
    proc modprobe & re /^Note: \/etc\/modules.conf is more recent than/	: drop
  }
}

[host mercury.ec : re /mercury\d+\.ec/	; email=>ecs-logs@lists] {
  service unix
  service sshd
  service itssunixadmin
  service saslauthd
  [periodic] {
    proc imaps & re /Fatal error: tls_start_servertls\(\) failed/	: drop
    proc imaps & re /check pass; user unknown/	: drop
    proc imap & re /^error sending to idled: \d/			: drop
    proc imaps & re /^error sending to idled: \d/			: drop
    proc lmtp & re /^error sending to idled: \d/			: drop
    proc imap & re /^check pass; user unknown/				: drop
  }
}

[host sqldb.ec : re /sqldb\d+\.ec/	; email=>ecs-logs@lists] {
  service unix
  service sshd
  service itssunixadmin
  service nagios
}

[host elgol : re /elgo\d.itss/	; email=>itss-unix-admin]  {
  service unix
  service sshd
  service itssunixadmin
}

[host container.itss: re /^container.+\.itss/	; email=>itss-unix-admin] {
  service itsssolaris
}

[host garnet.itss : email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service itssunixadmin
}

[host eckrb-cdc.ec: re /eckrb-\d\d-cdc.ec/	; email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service itssunixadmin
}

[host gomeisa.itss : email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service itssunixadmin
}

[host mutsumi.no : email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service itssunixadmin
}

[host ute.itss : /^ute.+\.itss/	; email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service itssunixadmin
}

[host ichigo.itss : email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service lbradmin
  service itssunixadmin
}

[host ringo.itss : email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service itssunixadmin
  service lbradmin
}

[host shinobu.itss : email=>itss-unix-admin] {
  service unix
  service sshd
  service nagios
  service itssunixadmin
  service tsm
}



# this section tries to cover all the legit su and sudo activity

$EC_UNIX_ADMIN = (?:yongbao|cwar037|richards|dqu002)
$ITSS_DBA = (?:diva003|nlat007|amcl065|srav002)
$ID = (?:\[ID [^\]]+\]\s*)

[service ecunixadmin] {
  [periodic] {
    proc sudo & re /^$EC_UNIX_ADMIN/					: drop
    proc su & re /'su root' succeeded for $EC_UNIX_ADMIN/			: drop
    proc su & re /'su \w+' succeeded for root/					: drop
  }
}



[service netaccount] {
  [periodic] {
    proc PWRMasterDaemon & re /recieved SIGHUP/	: drop
    proc PWRMasterDaemon & re /PWRProcessDeadModule: module PWRECKerberosModule died without unregistering/	: drop
    proc account & re /^upi is NULL/	: drop
    proc GroupList & re /groupGetDisplayViewModifyAndModifyProperties: Error 0 /	: drop
    proc  usereditservice & re /WritePOSAccountingDetails: -\d+ cents ip\s*Quota Failed to add to user/	: drop
    proc account & re /WritePOSAccountingDetails: -\d+ cents ip\s*Quota Failed to add to user/	: drop
#    proc passwd & re /Failed for user \S+: Error \d+, Be more original/	: drop
    proc passwdd & re /Failed for user \w+: Error \d+, Be more original /	: drop
    proc passwdd & /^passwdGet return Password expired/				: drop
    proc pwrmasterdaemon & re /recieved SIGHUP, retrying failed children/		: drop
    proc pwreckerberosmodule & re /created new user '\S+' on 'EC.AUCKLAND.AC.NZ'/	: drop
    proc pwreckerberosmodule & re /EXPIRE \d/	: drop
    proc pwreckerberosmodule & re /Communication failure with server, while kadm5_chpass/	: drop
    proc pwradeckerberosmodule & re /ignoring Authentication error, prolly no such user/	: drop
    proc pwradeckerberosmodule & re /^I've sync'd 1000 passwords, will restart to stop memory leaks./	: drop
    proc pwreckerberosmodule & /^Module PWRECKerberosModule successfully registered/	: drop 
#    proc passwdnotify1.1 & re /set_passwd: localhost returned ERROR_SUCCESS when changing password for /	: drop
    re /set_passwd: localhost returned ERROR_SUCCESS when changing password for /	: drop
    proc passwd & re /Failed for user \w+: Error 400\d, Be more original/	: drop

    proc bookserver & re /^Spawning CMDS\/rdbservice/		 : drop
    proc bookserver & re /^Spawning CMDS\/usereditservice/	: drop

    proc usereditservice & re /quotaLib: no records found for /	: drop
    proc usereditservice & re /^HandleBeginEditingUserRequest: Admin .+: DB Record not found/	: drop
    proc usereditservice & re /^HandleBeginEditingUserRequest: Admin .+: Error 0/	: drop
    proc usereditservice & re /^UserEditService: remoteIP.+ : Password expired/	: drop
    proc usereditservice & re /^HandleTransferQuotaRequest: .+  Failed in Deduction of \d+ from Source printQuota: /	: drop
    proc usereditservice & re /^LVerifyReceiveHeader\(\): packet type: \d+: token/	: drop
    proc usereditservice & re /^LPPReceiveVariablePacket[^:]+: packetType=\d+, Error ePPinvalid\s*Packet/	: drop
    proc usereditservice & re /^main: PPReceiveVariablePacket failed because the connection requested/	: drop
    proc usereditservice & re /^main: PPReceiveVariablePacket failed because an invalid packet was received/	: drop
    proc usereditservice & re /^HandleStartSecureSession\([^)]+\): DB Record not found/	: drop
    proc usereditservice & re /^main: User handle packet failed because an unknown error \(\d+\) occurred/	: drop
    proc UserEditService & re /^UserEditService: remoteIP = '\w+' accessGroup/	: drop
    proc usereditservice & re /user \S+ has no privileges to run this program: not in group/	: drop
    proc usereditservice & re /^HandleBeginEditingUserRequest: Admin .+ BARCODE_KEY \S+ : No result returned from query/	: drop
    proc usereditservice & re /userIdGetUpis: sqlResultVectorNew returned: DB Record not found/	: drop
    proc usereditservice & re /^WritePOSAccountingDetails: -\d+ cents copierQuota quota Failed to add to user/	: drop
    proc usereditservice & re /^HandleTransferQuotaRequest: \S+  Failed in Deduction of \d+ from Source copierQuota:/	: drop
    proc usereditservice & re /^LPPSendPacket\(\d+\): returned status: 2/	: drop
    proc usereditservice & re /^main: User handle packet failed because an invalid packet was received/	: drop
    proc usereditservice & re /^UserEditService: remoteIP = '[^']+' accessGroup = '[^']+'/	: drop

    proc 'rdb service' & re /^HandleGetPersonalDetailsRequest: Error fetching passwd for \S+ : Password expired/	: drop
    proc 'rdb service' & re /userIdGetUpis: sqlResultVectorNew returned: DB Record not found/	: drop
    proc 'rdb service' & re /^HandleGetPersonalDetailsRequest: key == '\d+': Not Found/	: drop
    proc 'rdb service' & re /^LPPReceiveVariablePacket[^:]+: Problem reading header: amount read = \d+ \(error \d+\) - aborting read/	: drop
    proc 'rdb service' & re /main: PPReceiveVariablePacket failed because the connection requested to be disconnected /	: drop
    proc 'rdb service' & re /HandleGetPersonalDetailsRequest: key == NULL or is empty/	: drop
    proc 'rdb service' & re /HandleGetPersonalDetailsRequest: Error fetching passwd for \w+ : Password expired/	: drop
    proc 'rdb service' & re /HandleGetPersonalDetailsRequest: key == '\w+': Not Found/	: drop
    proc 'rdb service' & re /LPPSendPacket\(\d+\): problem reading ack errno=104/	: drop
    proc 'rdb service' & re /Lost connection to MySQL server during query/	: count 10 "Lost connection to database", drop
    proc grouplist & re /groupGetDisplayViewModifyAndModifyProperties: Error \d/	: drop
    proc grouplist & re /Lost connection to MySQL server during query/		: count 10 "Lost connection to database", drop
    proc mismatch & re /wanted /	: drop
    proc exportusersvialdap & re /ldapa:ldapa_add_user_to_group: ldap_modify_s failed, No such object/	: drop
  }
}

[host data.ec : re /data\d.ec/	; email=>ecs-logs@lists] {
  service unix
  service sshd
  service nagios
  service netaccount
  service ecunixadmin
  [periodic] {
    proc sshd & re /^nss_ldap: reconnecting to LDAP server/		: drop
    proc sshd & re /^nss_ldap: reconnected to LDAP server after 1 a/	: drop
  }
}


[host ecafs : re /ecafs-\w+(-cdc)?.ec/	; email=>ecs-logs@lists ] {
  service unix 
  service sendmail
  service nagios
  service ipmon
  service cosign
  service stunnel
  service sshd
  service ecunixadmin
  [periodic] {
    proc sshd & /^pam_krb5[^:]+:configured realm 'EC.AUCKLAND.AC.NZ'/	: drop
    proc sshd & /^pam_krb5[^:]+: flag/					: drop
    proc sshd & /^pam_krb5[^:]+: will/					: drop
    proc sshd & /^pam_krb5[^:]+: ticket lifetime/			: drop
    proc sshd & /^pam_krb5[^:]+: renewable lifetime:/			: drop
    proc sshd & /^pam_krb5[^:]+: minimum uid:/				: drop
    proc sshd & /^pam_krb5[^:]+: banner: /				: drop
    proc sshd & /^pam_krb5[^:]+: banner: /				: drop
    proc sshd & /^pam_krb5[^:]+: ccache dir:/				: drop
    proc sshd & /^pam_krb5[^:]+: keytab:/				: drop
    proc sshd & /^pam_krb5[^:]+: removing ccache file:/			: drop
    proc sshd & /^pam_krb5[^:]+: destroyed v5 ticket file for/		: drop
    proc sshd & /^pam_krb5[^:]+: pam_close_session returning 0/		: drop
  }
}

[host eckrb : re /eckrb-\d\d-cdc.ec/	; email=>ecs-logs@lists ] {
  service unix 
  service sendmail
  service nagios
  service ipmon
  service cosign
  service sshd
  service ecunixadmin
}

[host ecprint : re /print.*\.ec/	; email=>ecs-logs@lists ] {
  service unix 
  service stunnel
  service sendmail
  service nagios
  service ipmon
  service cosign
  service srs
  service sshd
  service ecunixadmin
  [periodic] {
     proc blpd & /^FixQuotas: Warning: (\S+) acct file empty./	: count 20 "%1 acct file empty", drop 
     proc blpd & /^ALERT Printing accounting failed/	: count 50 "blp acct failed", drop 
  }
}

[host ecdb : re /ecdb\d\d\.ec/	; email=>ecs-logs@lists ] {
  service unix 
  service sendmail
  service nagios
  service ipmon
  service cosign
  service sshd
  service ecunixadmin
}

[host ecgate : re /gate\d?\.ec/	; email=>ecs-logs@lists ] {
  service unix 
  service sendmail
  service nagios
  service ipmon
  service cosign
  service sshd
  service ecunixadmin
  [periodic] {
  }
}

[host webmail.ec : /webmail\d\.ec/	; email=>ecs-logs@lists ] {
  service unix 
  service sendmail
  service nagios
  service ipmon
  service cosign
  service sshd
  service ecunixadmin
}

[host larry.its : email => itss-unix-admin ] {

  service unix
  service sshd
  service nagios
  service itssunixadmin
  service mailserver
}


[host curly.its : email => itss-unix-admin ] {

  service unix
  service sshd
  service nagios
  service itssunixadmin
  service mailserver
}

[host moe.its : email => itss-unix-admin ] {

  service unix
  service sshd
  service nagios
  service itssunixadmin
  service mailserver
}
[host haruka.itss : email => itss-unix-admin ] {

  service unix
  service sshd
  service nagios
  service itssunixadmin
  service mailserver
}

[host dc02vmremdevweb.its : email => itss-unix-admin ] {
  service unix 
  service sendmail
  service nagios
}

[host dcpsesprvir : /dc\d\dpsesprvir\d+/	; email => itss-unix-admin ] {
  service itsslinux

  [periodic]{
     proc snmpd 	: drop
     proc vmkernel	: drop
     proc logger	: drop
     proc insmod	: drop
 }
}